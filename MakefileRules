include ${SUBDIR:%=%/Makefile}

#
# LCOV=enable
#
ifdef LCOV
    ifeq ($(shell echo $(LCOV)), enable)
        BUILD_CCFLAGS += --coverage
        LDFLAGS += --coverage
    endif
endif

#
# OPT=enable
#
ifdef OPT
    ifeq ($(shell echo $(OPT)), enable)
        # optimized build
        BUILD_CCFLAGS += -O2 -g
    else
        $(error Unknown value for OPT)
    endif
else
    BUILD_CCFLAGS += -DDEBUG_BUILD
endif

#
# DEBUG=disable
#
ifdef DEBUG
    # Disable debug
    ifeq ($(shell echo $(DEBUG)), disable)
        BUILD_CCFLAGS +=
    else
        $(error Unknown value for DEBUG)
    endif
else
    # debug build
    BUILD_CCFLAGS += -g3
endif

#
# PROFILE=enable
#
ifdef PROFILE
    ifeq ($(shell echo $(PROFILE)), enable)
        # optimized build
        BUILD_CCFLAGS += -pg
        LDFLAGS = -pg
    else
        $(error Unknown value for PROFILE)
    endif
endif

#
# VERBOSE=disable
#
ifdef VERBOSE
    ifeq ($(shell echo $(VERBOSE)), disable)
        $(info ** VERBOSE disabled **)
        BUILD_CCFLAGS += -DDISABLE_VERBOSE
    else
        $(error Unknown value for VERBOSE)
    endif
endif

#
# VALGRIND=enable
#
ifdef VALGRIND
    ifeq ($(shell echo $(VALGRIND)), enable)
        CCFLAGS += -DVALGRIND_BUILD
    else
        $(error Unknown value for VALGRIND)
    endif
endif

#
# ERRCHECK=enable
#
ifdef ERRCHK
    ifeq ($(ERRCHK), enable)
        CCFLAGS += -DERROR_CHECK
    else
        $(error Unknown value for ERRCHK)
    endif
endif

#
# TCMALLOC
#
ifdef TCMALLOC
    ifeq ($(shell echo $(TCMALLOC)), enable)
        LIBS += -ltcmalloc_minimal
    endif
endif

CC = g++-4.7
AR = $(shell which ar)
MKDIR_P = mkdir -p


CCFLAGS += -Wall -std=c++11 -Werror -D__STDC_LIMIT_MACROS $(BUILD_CCFLAGS)
LDFLAGS += -L$(OBJDIR)  -L/usr/lib
INCLUDE += -I. -I./src -Ipublic -I/usr/include/boost 
LIBS    += -lrt -lpthread  -lz -lboost_program_options

ifndef OBJDIR
OBJDIR	:= $(PWD)/../build
endif

OBJS    := ${SRCS:%.cc=$(OBJDIR)/%.o}
DEPS    := ${OBJS:%.o=%.dep}
TOBJS	:= ${TARGET:%.cc=$(OBJDIR)/%.o}
TDEPS	:= ${TOBJS:%.o=%.dep}
TEXE	:= ${TARGET:%.cc=$(OBJDIR)/%}
STATIC	:= ${LIBRARY:%=${OBJDIR}/%/library.a}

all: lib exe
	@echo $(UNAME)

-include $(DEPS)
-include $(TDEPS)

all: lib exe
lib: ${OBJS} $(LIBRARY)
exe: $(TOBJ) $(TEXE)

${TEXE}: ${STATIC} ${TOBJS}
	@echo ' LD	' $@ $(ARDIR)
ifdef ARDIR
	@${CC} ${LDFLAGS} $@.o ${STATIC} `find $(ARDIR)/*.a` -o $@ ${LIBS}
else
	@${CC} ${LDFLAGS} $@.o ${STATIC} -o $@ ${LIBS} 
endif

${LIBRARY}: ${OBJS}
	@echo ' AR	' ${OBJDIR}/$@/library.a
	@$(AR) rcs ${OBJDIR}/$@/library.a $(shell find ${OBJDIR}/$@ | egrep "\.o$$")
ifdef ARDIR
	@echo ' CP	$(OBJDIR)/$@/library.a => $(ARDIR)/$(notdir $@.a)'
	@cp $(OBJDIR)/$@/library.a $(ARDIR)/$(notdir $@).a
endif

$(OBJDIR)/%.o: %.cc
	@echo ' CC	' $@
	@${MKDIR_P} $(dir $@)
	@${CC} ${INCLUDE} ${CCFLAGS} -o $@ -c $< 
	@${CC} ${INCLUDE} ${CCFLAGS} -MT '$@' -MM $< > ${OBJDIR}/$*.dep

